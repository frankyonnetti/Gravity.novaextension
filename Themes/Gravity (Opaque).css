/**
* docs: https://docs.nova.app/extensions/themes
* color: http://colorizer.org
*/

meta {
  -theme-display-name: "Gravity (Opaque)";
  -theme-interface-style: dark;
  -theme-vibrancy: none;
  -theme-accent-color: auto;
}

/*
 * Window Content
 */
meta.window {
  border-color: rgba(255, 255, 255, 0.1);
  background-color: #2b2b2b;
}
meta.titlebar {
  color: #ccc;
  border-color: rgba(0, 0, 0, 0.3);
  background-color: #373737;
}
meta.titlebar.inactive {
  border-color: rgba(255, 255, 255, 0.1);
  background-color: #2b2b2b;
}

/*
 * Buttons
 */
meta.button {
  color: #ffffff;
  border: linear-gradient(#242424, #1f1f1f);
  background: linear-gradient(#3d3d3d, #383838);
}
meta.button.disabled {
  color: #666666;
  border: linear-gradient(#242424, #1f1f1f);
  background: linear-gradient(#3d3d3d, #383838);
}
meta.button.highlighted {
  color: #ffffff;
  background: linear-gradient(#242424, #525252);
}
meta.button.selected {
  color: #ffffff;
}
meta.button.highlighted.selected {
  color: #ffffff;
}

/*
 * Text Fields
 */
meta.textfield {
  border-color: #141414;
  background-color: #1a1a1a;
}

/*
 * Document Content
 */
meta.document {
  border-color: rgba(255, 255, 255, 0.1);
  background-color: #262626;
}
meta.text {
  color: #dddddd;
}
meta.text.selected {
  background-color: #3c3c3c;
}
meta.cursor {
  background-color: rgba(255, 255, 255, 0.05);
}
meta.indentguide {
  background-color: rgba(255, 255, 255, 0.05);
}
meta.gutter {
  color: #999;
}
meta.gutter.selected {
  background-color: #3c3c3c;
}

/*
 * Syntax styles
 */
keyword {
  color: #6dadd5; /* blue */
}
keyword.construct {
  color: #6dadd5; /* blue */
}
keyword.condition {
  color: #6dadd5; /* blue */
}
keyword.modifier {
  color: #6dadd5; /* blue */
}
keyword.operator {
  color: #6dadd5; /* blue */
}
keyword.self {
  color: #f6ab13; /* orange */
}
comment {
  color: #828282; /* gray3 */
}
processing {
  color: #828282; /* gray3 */
}
declaration {
  color: #ac80ff; /* purple */
}
bracket {
  color: #d2d2d2; /* gray4 */
  font-weight: bold;
}
operator {
  color: #f6ab13; /* orange */
}
invalid {
  color: #f7f7f7; /* white */
  background-color: #e73235; /* red */
}
link {
  color: #6dadd5; /* blue */
}

/* Values */
value {
  color: #ac80ff; /* purple */
}
value.boolean {
  color: #ac80ff; /* purple */
}
value.null {
  color: #ac80ff; /* purple */
}
value.number {
  color: #ac80ff; /* purple */
}
value.entity {
  color: #f6ab13; /* orange */
}
value.symbol {
  color: #ac80ff; /* purple */
}

/* Strings */
string {
  color: #e5b566; /* yellow2 */
}
string.key {
  color: #e73235; /* red */
}
string-template {
  color: #ffe894; /* yellow */
}
string-template.value {
  color: #f6ab13; /* orange */
}
regex {
  color: #f6ab13; /* orange */
}
regex.escaped {
  color: #e73235; /* red */
}
cdata {
  color: #6dadd5; /* blue */
}

/* Identifiers */
identifier.type {
  color: #f6ab13; /* orange */
}
dentifier.type.class {
  color: #f7f7f7; /* white */
}
identifier.type.protocol {
  color: #f7f7f7; /* white */
}
identifier.type.enum {
  color: #f7f7f7; /* white */
}
identifier.type.union {
  color: #f7f7f7; /* white */
}
identifier.type.struct {
  color: #f7f7f7; /* white */
}
identifier.global  {
  color: #f7f7f7; /* white */
}
identifier.variable {
  color: #f7f7f7; /* white */
}
identifier.constant {
  color: #f7f7f7; /* white */
}
identifier.property {
  color: #a3c266; /* green */
}
identifier.decorator {
  color: #e13d79; /* pink */
}
identifier.function {
  color: #f45d94; /* pink2 */
}
identifier.method {
  color: #e13d79; /* pink */
}
identifier.key {
  color: #6dadd5; /* blue */
}
identifier.argument {
  color: #f6ab13; /* orange */
}

/* Types */
definition {
  font-weight: bold;
}
definition.type {
  color: #ac80ff; /* purple */
}
definition.class {
  color: #ac80ff; /* purple */
}
definition.package {
  color: #ac80ff; /* purple */
}
definition.protocol {
  color: #ac80ff; /* purple */
}
definition.enum {
  color: #ac80ff; /* purple */
}
definition.union {
  color: #ac80ff; /* purple */
}
definition.struct {
  color: #ac80ff; /* purple */
}
definition.property {
  color: #f7f7f7; /* white */
}
definition.function {
 color: #f7f7f7; /* white */
}
definition.method {
  color: #f7f7f7; /* white */
}

/* Tags */
tag {
  color: #e13d79; /* pink */
}
tag.framework {
  color: #f7f7f7; /* white */
}
tag.attribute.name {
  color: #a3c266; /* green */
}
tag.attribute.value {
  color: #e5b566; /* yellow2 */
}

/* Styles */
style.at {
  color: #e13d79; /* pink */
  font-weight: bold;
}
style.selector {
  font-weight: bold;
}
style.selector.element {
}
style.selector.identifier.id {
  color: #a3c266; /* green */
}
style.selector.identifier.class {
  color: #a3c266; /* green */
}
style.selector.pseudoclass {
  color: #ffe894; /* yellow */
}
style.selector.pseudoelement {
  color: #ffe894; /* yellow */
}
style.attribute {
  color: #f7f7f7; /* white */
}
style.attribute.name {
  color: #6dadd5; /* blue */
}
style.value {
  color: #f7f7f7; /* white */
}
style.value.number {
  color: #ac80ff; /* purple */
}
style.value.color {
  color: #6dadd5; /* blue */
}
style.value.color.named {
  color: #6dadd5; /* blue */
}
style.value.color.hex {
  color: #ac80ff; /* purple */
}
style.value.keyword {
  color: #6dadd5; /* blue */
}

/* Markup */
markup.heading {
  color: #cc8718; /* orange2 */
}
markup.line {
  color: #cc8718; /* orange2 */
}
markup.bold {
  color: #6dadd5; /* blue */
  font-weight: bold;
}
markup.italic {
  color: #a3c266; /* green */
  font-style: italic;
}
markup.strikethrough {
  color: #e13d79; /* pink */
}
markup.list {
  color: #cc8718; /* orange2 */
}
markup.list.item {
  color: #cc8718; /* orange2 */
}
markup.code {
  background-color: rgba(128, 128, 128, 0.2);
}
markup.link {
  color: #6dadd5; /* blue */
}
